/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import { TypedEventFilter, TypedEvent, TypedListener } from "./commons";

interface TLensInterface extends ethers.utils.Interface {
  functions: {
    "getContracts(address,uint256)": FunctionFragment;
    "getCurrentMarkPrice(address,uint256)": FunctionFragment;
    "getCurrentValuePrices(address,uint256)": FunctionFragment;
    "getElapsedTime(address,uint256)": FunctionFragment;
    "getNumVaults(address)": FunctionFragment;
    "getNumber()": FunctionFragment;
    "getPositions(address,uint256,address)": FunctionFragment;
    "getPrices(address,uint256)": FunctionFragment;
    "getTrancheInfo(address,uint256)": FunctionFragment;
    "getTrancheInfoBatch(address)": FunctionFragment;
    "getTranches(address,uint256)": FunctionFragment;
    "getVaultParams(address,uint256)": FunctionFragment;
    "setTFactory(address)": FunctionFragment;
    "setTMaster(address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "getContracts",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getCurrentMarkPrice",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getCurrentValuePrices",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getElapsedTime",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getNumVaults",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "getNumber", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "getPositions",
    values: [string, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getPrices",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getTrancheInfo",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getTrancheInfoBatch",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getTranches",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getVaultParams",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "setTFactory", values: [string]): string;
  encodeFunctionData(functionFragment: "setTMaster", values: [string]): string;

  decodeFunctionResult(
    functionFragment: "getContracts",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCurrentMarkPrice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCurrentValuePrices",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getElapsedTime",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getNumVaults",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getNumber", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getPositions",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getPrices", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getTrancheInfo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTrancheInfoBatch",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTranches",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getVaultParams",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setTFactory",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setTMaster", data: BytesLike): Result;

  events: {};
}

export class TLens extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: TLensInterface;

  functions: {
    getContracts(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        [
          string,
          string,
          string,
          string,
          string,
          string,
          [
            string,
            string[],
            BigNumber[],
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            _want: string;
            _instruments: string[];
            _ratios: BigNumber[];
            _junior_weight: BigNumber;
            _promisedReturn: BigNumber;
            _time_to_maturity: BigNumber;
            vaultId: BigNumber;
            inceptionPrice: BigNumber;
          }
        ] & {
          vault: string;
          splitter: string;
          amm: string;
          lendingPool: string;
          cSenior: string;
          cJunior: string;
          param: [
            string,
            string[],
            BigNumber[],
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            _want: string;
            _instruments: string[];
            _ratios: BigNumber[];
            _junior_weight: BigNumber;
            _promisedReturn: BigNumber;
            _time_to_maturity: BigNumber;
            vaultId: BigNumber;
            inceptionPrice: BigNumber;
          };
        }
      ]
    >;

    "getContracts(address,uint256)"(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        [
          string,
          string,
          string,
          string,
          string,
          string,
          [
            string,
            string[],
            BigNumber[],
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            _want: string;
            _instruments: string[];
            _ratios: BigNumber[];
            _junior_weight: BigNumber;
            _promisedReturn: BigNumber;
            _time_to_maturity: BigNumber;
            vaultId: BigNumber;
            inceptionPrice: BigNumber;
          }
        ] & {
          vault: string;
          splitter: string;
          amm: string;
          lendingPool: string;
          cSenior: string;
          cJunior: string;
          param: [
            string,
            string[],
            BigNumber[],
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber,
            BigNumber
          ] & {
            _want: string;
            _instruments: string[];
            _ratios: BigNumber[];
            _junior_weight: BigNumber;
            _promisedReturn: BigNumber;
            _time_to_maturity: BigNumber;
            vaultId: BigNumber;
            inceptionPrice: BigNumber;
          };
        }
      ]
    >;

    getCurrentMarkPrice(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getCurrentMarkPrice(address,uint256)"(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getCurrentValuePrices(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber]>;

    "getCurrentValuePrices(address,uint256)"(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber]>;

    getElapsedTime(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getElapsedTime(address,uint256)"(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getNumVaults(
      tFactory_ad: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getNumVaults(address)"(
      tFactory_ad: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getNumber(overrides?: CallOverrides): Promise<[BigNumber]>;

    "getNumber()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    getPositions(
      tFactory_ad: string,
      vaultId: BigNumberish,
      who: string,
      overrides?: CallOverrides
    ): Promise<
      [
        ([
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          bidCrossId: BigNumber;
          askCrossId: BigNumber;
          askLiq: BigNumber;
          bidLiq: BigNumber;
          liquidity: BigNumber;
          feeGrowthInside0LastX128: BigNumber;
          feeGrowthInside1LastX128: BigNumber;
          tokensOwed0: BigNumber;
          tokensOwed1: BigNumber;
        })[]
      ]
    >;

    "getPositions(address,uint256,address)"(
      tFactory_ad: string,
      vaultId: BigNumberish,
      who: string,
      overrides?: CallOverrides
    ): Promise<
      [
        ([
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          bidCrossId: BigNumber;
          askCrossId: BigNumber;
          askLiq: BigNumber;
          bidLiq: BigNumber;
          liquidity: BigNumber;
          feeGrowthInside0LastX128: BigNumber;
          feeGrowthInside1LastX128: BigNumber;
          tokensOwed0: BigNumber;
          tokensOwed1: BigNumber;
        })[]
      ]
    >;

    getPrices(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber]>;

    "getPrices(address,uint256)"(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber]>;

    getTrancheInfo(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        [
          string,
          string[],
          BigNumber[],
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          _want: string;
          _instruments: string[];
          _ratios: BigNumber[];
          _junior_weight: BigNumber;
          _promisedReturn: BigNumber;
          _time_to_maturity: BigNumber;
          vaultId: BigNumber;
          inceptionPrice: BigNumber;
          psu: BigNumber;
          pju: BigNumber;
          pjs: BigNumber;
          curMarkPrice: BigNumber;
        }
      ]
    >;

    "getTrancheInfo(address,uint256)"(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        [
          string,
          string[],
          BigNumber[],
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          _want: string;
          _instruments: string[];
          _ratios: BigNumber[];
          _junior_weight: BigNumber;
          _promisedReturn: BigNumber;
          _time_to_maturity: BigNumber;
          vaultId: BigNumber;
          inceptionPrice: BigNumber;
          psu: BigNumber;
          pju: BigNumber;
          pjs: BigNumber;
          curMarkPrice: BigNumber;
        }
      ]
    >;

    getTrancheInfoBatch(
      tFactory_ad: string,
      overrides?: CallOverrides
    ): Promise<
      [
        ([
          string,
          string[],
          BigNumber[],
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          _want: string;
          _instruments: string[];
          _ratios: BigNumber[];
          _junior_weight: BigNumber;
          _promisedReturn: BigNumber;
          _time_to_maturity: BigNumber;
          vaultId: BigNumber;
          inceptionPrice: BigNumber;
          psu: BigNumber;
          pju: BigNumber;
          pjs: BigNumber;
          curMarkPrice: BigNumber;
        })[]
      ]
    >;

    "getTrancheInfoBatch(address)"(
      tFactory_ad: string,
      overrides?: CallOverrides
    ): Promise<
      [
        ([
          string,
          string[],
          BigNumber[],
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          _want: string;
          _instruments: string[];
          _ratios: BigNumber[];
          _junior_weight: BigNumber;
          _promisedReturn: BigNumber;
          _time_to_maturity: BigNumber;
          vaultId: BigNumber;
          inceptionPrice: BigNumber;
          psu: BigNumber;
          pju: BigNumber;
          pjs: BigNumber;
          curMarkPrice: BigNumber;
        })[]
      ]
    >;

    getTranches(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, string]>;

    "getTranches(address,uint256)"(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, string]>;

    getVaultParams(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        [
          string,
          string[],
          BigNumber[],
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          _want: string;
          _instruments: string[];
          _ratios: BigNumber[];
          _junior_weight: BigNumber;
          _promisedReturn: BigNumber;
          _time_to_maturity: BigNumber;
          vaultId: BigNumber;
          inceptionPrice: BigNumber;
        }
      ]
    >;

    "getVaultParams(address,uint256)"(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        [
          string,
          string[],
          BigNumber[],
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          _want: string;
          _instruments: string[];
          _ratios: BigNumber[];
          _junior_weight: BigNumber;
          _promisedReturn: BigNumber;
          _time_to_maturity: BigNumber;
          vaultId: BigNumber;
          inceptionPrice: BigNumber;
        }
      ]
    >;

    setTFactory(
      tFactory_ad: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "setTFactory(address)"(
      tFactory_ad: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setTMaster(
      tMaster_ad: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "setTMaster(address)"(
      tMaster_ad: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  getContracts(
    tFactory_ad: string,
    vaultId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [
      string,
      string,
      string,
      string,
      string,
      string,
      [
        string,
        string[],
        BigNumber[],
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        _want: string;
        _instruments: string[];
        _ratios: BigNumber[];
        _junior_weight: BigNumber;
        _promisedReturn: BigNumber;
        _time_to_maturity: BigNumber;
        vaultId: BigNumber;
        inceptionPrice: BigNumber;
      }
    ] & {
      vault: string;
      splitter: string;
      amm: string;
      lendingPool: string;
      cSenior: string;
      cJunior: string;
      param: [
        string,
        string[],
        BigNumber[],
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        _want: string;
        _instruments: string[];
        _ratios: BigNumber[];
        _junior_weight: BigNumber;
        _promisedReturn: BigNumber;
        _time_to_maturity: BigNumber;
        vaultId: BigNumber;
        inceptionPrice: BigNumber;
      };
    }
  >;

  "getContracts(address,uint256)"(
    tFactory_ad: string,
    vaultId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [
      string,
      string,
      string,
      string,
      string,
      string,
      [
        string,
        string[],
        BigNumber[],
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        _want: string;
        _instruments: string[];
        _ratios: BigNumber[];
        _junior_weight: BigNumber;
        _promisedReturn: BigNumber;
        _time_to_maturity: BigNumber;
        vaultId: BigNumber;
        inceptionPrice: BigNumber;
      }
    ] & {
      vault: string;
      splitter: string;
      amm: string;
      lendingPool: string;
      cSenior: string;
      cJunior: string;
      param: [
        string,
        string[],
        BigNumber[],
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        _want: string;
        _instruments: string[];
        _ratios: BigNumber[];
        _junior_weight: BigNumber;
        _promisedReturn: BigNumber;
        _time_to_maturity: BigNumber;
        vaultId: BigNumber;
        inceptionPrice: BigNumber;
      };
    }
  >;

  getCurrentMarkPrice(
    tFactory_ad: string,
    vaultId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getCurrentMarkPrice(address,uint256)"(
    tFactory_ad: string,
    vaultId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getCurrentValuePrices(
    tFactory_ad: string,
    vaultId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber, BigNumber]>;

  "getCurrentValuePrices(address,uint256)"(
    tFactory_ad: string,
    vaultId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber, BigNumber]>;

  getElapsedTime(
    tFactory_ad: string,
    vaultId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getElapsedTime(address,uint256)"(
    tFactory_ad: string,
    vaultId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getNumVaults(
    tFactory_ad: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getNumVaults(address)"(
    tFactory_ad: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getNumber(overrides?: CallOverrides): Promise<BigNumber>;

  "getNumber()"(overrides?: CallOverrides): Promise<BigNumber>;

  getPositions(
    tFactory_ad: string,
    vaultId: BigNumberish,
    who: string,
    overrides?: CallOverrides
  ): Promise<
    ([
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber
    ] & {
      bidCrossId: BigNumber;
      askCrossId: BigNumber;
      askLiq: BigNumber;
      bidLiq: BigNumber;
      liquidity: BigNumber;
      feeGrowthInside0LastX128: BigNumber;
      feeGrowthInside1LastX128: BigNumber;
      tokensOwed0: BigNumber;
      tokensOwed1: BigNumber;
    })[]
  >;

  "getPositions(address,uint256,address)"(
    tFactory_ad: string,
    vaultId: BigNumberish,
    who: string,
    overrides?: CallOverrides
  ): Promise<
    ([
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber
    ] & {
      bidCrossId: BigNumber;
      askCrossId: BigNumber;
      askLiq: BigNumber;
      bidLiq: BigNumber;
      liquidity: BigNumber;
      feeGrowthInside0LastX128: BigNumber;
      feeGrowthInside1LastX128: BigNumber;
      tokensOwed0: BigNumber;
      tokensOwed1: BigNumber;
    })[]
  >;

  getPrices(
    tFactory_ad: string,
    vaultId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber, BigNumber]>;

  "getPrices(address,uint256)"(
    tFactory_ad: string,
    vaultId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber, BigNumber]>;

  getTrancheInfo(
    tFactory_ad: string,
    vaultId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [
      string,
      string[],
      BigNumber[],
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber
    ] & {
      _want: string;
      _instruments: string[];
      _ratios: BigNumber[];
      _junior_weight: BigNumber;
      _promisedReturn: BigNumber;
      _time_to_maturity: BigNumber;
      vaultId: BigNumber;
      inceptionPrice: BigNumber;
      psu: BigNumber;
      pju: BigNumber;
      pjs: BigNumber;
      curMarkPrice: BigNumber;
    }
  >;

  "getTrancheInfo(address,uint256)"(
    tFactory_ad: string,
    vaultId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [
      string,
      string[],
      BigNumber[],
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber
    ] & {
      _want: string;
      _instruments: string[];
      _ratios: BigNumber[];
      _junior_weight: BigNumber;
      _promisedReturn: BigNumber;
      _time_to_maturity: BigNumber;
      vaultId: BigNumber;
      inceptionPrice: BigNumber;
      psu: BigNumber;
      pju: BigNumber;
      pjs: BigNumber;
      curMarkPrice: BigNumber;
    }
  >;

  getTrancheInfoBatch(
    tFactory_ad: string,
    overrides?: CallOverrides
  ): Promise<
    ([
      string,
      string[],
      BigNumber[],
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber
    ] & {
      _want: string;
      _instruments: string[];
      _ratios: BigNumber[];
      _junior_weight: BigNumber;
      _promisedReturn: BigNumber;
      _time_to_maturity: BigNumber;
      vaultId: BigNumber;
      inceptionPrice: BigNumber;
      psu: BigNumber;
      pju: BigNumber;
      pjs: BigNumber;
      curMarkPrice: BigNumber;
    })[]
  >;

  "getTrancheInfoBatch(address)"(
    tFactory_ad: string,
    overrides?: CallOverrides
  ): Promise<
    ([
      string,
      string[],
      BigNumber[],
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber
    ] & {
      _want: string;
      _instruments: string[];
      _ratios: BigNumber[];
      _junior_weight: BigNumber;
      _promisedReturn: BigNumber;
      _time_to_maturity: BigNumber;
      vaultId: BigNumber;
      inceptionPrice: BigNumber;
      psu: BigNumber;
      pju: BigNumber;
      pjs: BigNumber;
      curMarkPrice: BigNumber;
    })[]
  >;

  getTranches(
    tFactory_ad: string,
    vaultId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[string, string]>;

  "getTranches(address,uint256)"(
    tFactory_ad: string,
    vaultId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[string, string]>;

  getVaultParams(
    tFactory_ad: string,
    vaultId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [
      string,
      string[],
      BigNumber[],
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber
    ] & {
      _want: string;
      _instruments: string[];
      _ratios: BigNumber[];
      _junior_weight: BigNumber;
      _promisedReturn: BigNumber;
      _time_to_maturity: BigNumber;
      vaultId: BigNumber;
      inceptionPrice: BigNumber;
    }
  >;

  "getVaultParams(address,uint256)"(
    tFactory_ad: string,
    vaultId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [
      string,
      string[],
      BigNumber[],
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber
    ] & {
      _want: string;
      _instruments: string[];
      _ratios: BigNumber[];
      _junior_weight: BigNumber;
      _promisedReturn: BigNumber;
      _time_to_maturity: BigNumber;
      vaultId: BigNumber;
      inceptionPrice: BigNumber;
    }
  >;

  setTFactory(
    tFactory_ad: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "setTFactory(address)"(
    tFactory_ad: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setTMaster(
    tMaster_ad: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "setTMaster(address)"(
    tMaster_ad: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    getContracts(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        string,
        string,
        string,
        string,
        string,
        string,
        [
          string,
          string[],
          BigNumber[],
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          _want: string;
          _instruments: string[];
          _ratios: BigNumber[];
          _junior_weight: BigNumber;
          _promisedReturn: BigNumber;
          _time_to_maturity: BigNumber;
          vaultId: BigNumber;
          inceptionPrice: BigNumber;
        }
      ] & {
        vault: string;
        splitter: string;
        amm: string;
        lendingPool: string;
        cSenior: string;
        cJunior: string;
        param: [
          string,
          string[],
          BigNumber[],
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          _want: string;
          _instruments: string[];
          _ratios: BigNumber[];
          _junior_weight: BigNumber;
          _promisedReturn: BigNumber;
          _time_to_maturity: BigNumber;
          vaultId: BigNumber;
          inceptionPrice: BigNumber;
        };
      }
    >;

    "getContracts(address,uint256)"(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        string,
        string,
        string,
        string,
        string,
        string,
        [
          string,
          string[],
          BigNumber[],
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          _want: string;
          _instruments: string[];
          _ratios: BigNumber[];
          _junior_weight: BigNumber;
          _promisedReturn: BigNumber;
          _time_to_maturity: BigNumber;
          vaultId: BigNumber;
          inceptionPrice: BigNumber;
        }
      ] & {
        vault: string;
        splitter: string;
        amm: string;
        lendingPool: string;
        cSenior: string;
        cJunior: string;
        param: [
          string,
          string[],
          BigNumber[],
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          _want: string;
          _instruments: string[];
          _ratios: BigNumber[];
          _junior_weight: BigNumber;
          _promisedReturn: BigNumber;
          _time_to_maturity: BigNumber;
          vaultId: BigNumber;
          inceptionPrice: BigNumber;
        };
      }
    >;

    getCurrentMarkPrice(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getCurrentMarkPrice(address,uint256)"(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getCurrentValuePrices(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber]>;

    "getCurrentValuePrices(address,uint256)"(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber]>;

    getElapsedTime(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getElapsedTime(address,uint256)"(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getNumVaults(
      tFactory_ad: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getNumVaults(address)"(
      tFactory_ad: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getNumber(overrides?: CallOverrides): Promise<BigNumber>;

    "getNumber()"(overrides?: CallOverrides): Promise<BigNumber>;

    getPositions(
      tFactory_ad: string,
      vaultId: BigNumberish,
      who: string,
      overrides?: CallOverrides
    ): Promise<
      ([
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        bidCrossId: BigNumber;
        askCrossId: BigNumber;
        askLiq: BigNumber;
        bidLiq: BigNumber;
        liquidity: BigNumber;
        feeGrowthInside0LastX128: BigNumber;
        feeGrowthInside1LastX128: BigNumber;
        tokensOwed0: BigNumber;
        tokensOwed1: BigNumber;
      })[]
    >;

    "getPositions(address,uint256,address)"(
      tFactory_ad: string,
      vaultId: BigNumberish,
      who: string,
      overrides?: CallOverrides
    ): Promise<
      ([
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        bidCrossId: BigNumber;
        askCrossId: BigNumber;
        askLiq: BigNumber;
        bidLiq: BigNumber;
        liquidity: BigNumber;
        feeGrowthInside0LastX128: BigNumber;
        feeGrowthInside1LastX128: BigNumber;
        tokensOwed0: BigNumber;
        tokensOwed1: BigNumber;
      })[]
    >;

    getPrices(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber]>;

    "getPrices(address,uint256)"(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber]>;

    getTrancheInfo(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        string,
        string[],
        BigNumber[],
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        _want: string;
        _instruments: string[];
        _ratios: BigNumber[];
        _junior_weight: BigNumber;
        _promisedReturn: BigNumber;
        _time_to_maturity: BigNumber;
        vaultId: BigNumber;
        inceptionPrice: BigNumber;
        psu: BigNumber;
        pju: BigNumber;
        pjs: BigNumber;
        curMarkPrice: BigNumber;
      }
    >;

    "getTrancheInfo(address,uint256)"(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        string,
        string[],
        BigNumber[],
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        _want: string;
        _instruments: string[];
        _ratios: BigNumber[];
        _junior_weight: BigNumber;
        _promisedReturn: BigNumber;
        _time_to_maturity: BigNumber;
        vaultId: BigNumber;
        inceptionPrice: BigNumber;
        psu: BigNumber;
        pju: BigNumber;
        pjs: BigNumber;
        curMarkPrice: BigNumber;
      }
    >;

    getTrancheInfoBatch(
      tFactory_ad: string,
      overrides?: CallOverrides
    ): Promise<
      ([
        string,
        string[],
        BigNumber[],
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        _want: string;
        _instruments: string[];
        _ratios: BigNumber[];
        _junior_weight: BigNumber;
        _promisedReturn: BigNumber;
        _time_to_maturity: BigNumber;
        vaultId: BigNumber;
        inceptionPrice: BigNumber;
        psu: BigNumber;
        pju: BigNumber;
        pjs: BigNumber;
        curMarkPrice: BigNumber;
      })[]
    >;

    "getTrancheInfoBatch(address)"(
      tFactory_ad: string,
      overrides?: CallOverrides
    ): Promise<
      ([
        string,
        string[],
        BigNumber[],
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        _want: string;
        _instruments: string[];
        _ratios: BigNumber[];
        _junior_weight: BigNumber;
        _promisedReturn: BigNumber;
        _time_to_maturity: BigNumber;
        vaultId: BigNumber;
        inceptionPrice: BigNumber;
        psu: BigNumber;
        pju: BigNumber;
        pjs: BigNumber;
        curMarkPrice: BigNumber;
      })[]
    >;

    getTranches(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, string]>;

    "getTranches(address,uint256)"(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, string]>;

    getVaultParams(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        string,
        string[],
        BigNumber[],
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        _want: string;
        _instruments: string[];
        _ratios: BigNumber[];
        _junior_weight: BigNumber;
        _promisedReturn: BigNumber;
        _time_to_maturity: BigNumber;
        vaultId: BigNumber;
        inceptionPrice: BigNumber;
      }
    >;

    "getVaultParams(address,uint256)"(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        string,
        string[],
        BigNumber[],
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        _want: string;
        _instruments: string[];
        _ratios: BigNumber[];
        _junior_weight: BigNumber;
        _promisedReturn: BigNumber;
        _time_to_maturity: BigNumber;
        vaultId: BigNumber;
        inceptionPrice: BigNumber;
      }
    >;

    setTFactory(tFactory_ad: string, overrides?: CallOverrides): Promise<void>;

    "setTFactory(address)"(
      tFactory_ad: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setTMaster(tMaster_ad: string, overrides?: CallOverrides): Promise<void>;

    "setTMaster(address)"(
      tMaster_ad: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    getContracts(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getContracts(address,uint256)"(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getCurrentMarkPrice(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getCurrentMarkPrice(address,uint256)"(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getCurrentValuePrices(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getCurrentValuePrices(address,uint256)"(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getElapsedTime(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getElapsedTime(address,uint256)"(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getNumVaults(
      tFactory_ad: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getNumVaults(address)"(
      tFactory_ad: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getNumber(overrides?: CallOverrides): Promise<BigNumber>;

    "getNumber()"(overrides?: CallOverrides): Promise<BigNumber>;

    getPositions(
      tFactory_ad: string,
      vaultId: BigNumberish,
      who: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getPositions(address,uint256,address)"(
      tFactory_ad: string,
      vaultId: BigNumberish,
      who: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPrices(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getPrices(address,uint256)"(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTrancheInfo(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getTrancheInfo(address,uint256)"(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTrancheInfoBatch(
      tFactory_ad: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getTrancheInfoBatch(address)"(
      tFactory_ad: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTranches(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getTranches(address,uint256)"(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getVaultParams(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getVaultParams(address,uint256)"(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setTFactory(
      tFactory_ad: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "setTFactory(address)"(
      tFactory_ad: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setTMaster(
      tMaster_ad: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "setTMaster(address)"(
      tMaster_ad: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getContracts(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getContracts(address,uint256)"(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getCurrentMarkPrice(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getCurrentMarkPrice(address,uint256)"(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getCurrentValuePrices(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getCurrentValuePrices(address,uint256)"(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getElapsedTime(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getElapsedTime(address,uint256)"(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getNumVaults(
      tFactory_ad: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getNumVaults(address)"(
      tFactory_ad: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getNumber(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getNumber()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getPositions(
      tFactory_ad: string,
      vaultId: BigNumberish,
      who: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getPositions(address,uint256,address)"(
      tFactory_ad: string,
      vaultId: BigNumberish,
      who: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPrices(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getPrices(address,uint256)"(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTrancheInfo(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getTrancheInfo(address,uint256)"(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTrancheInfoBatch(
      tFactory_ad: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getTrancheInfoBatch(address)"(
      tFactory_ad: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTranches(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getTranches(address,uint256)"(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getVaultParams(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getVaultParams(address,uint256)"(
      tFactory_ad: string,
      vaultId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setTFactory(
      tFactory_ad: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "setTFactory(address)"(
      tFactory_ad: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setTMaster(
      tMaster_ad: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "setTMaster(address)"(
      tMaster_ad: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
